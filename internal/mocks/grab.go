// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	serror "repo-scanner/internal/utils/serror"

	mock "github.com/stretchr/testify/mock"
)

// IGrabScanner is an autogenerated mock type for the IGrabScanner type
type IGrabScanner struct {
	mock.Mock
}

// StartScanningSession provides a mock function with given fields: _a0
func (_m *IGrabScanner) StartScanningSession(_a0 string) ([]byte, serror.SError) {
	ret := _m.Called(_a0)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(string) []byte); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 serror.SError
	if rf, ok := ret.Get(1).(func(string) serror.SError); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(serror.SError)
		}
	}

	return r0, r1
}

type mockConstructorTestingTNewIGrabScanner interface {
	mock.TestingT
	Cleanup(func())
}

// NewIGrabScanner creates a new instance of IGrabScanner. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIGrabScanner(t mockConstructorTestingTNewIGrabScanner) *IGrabScanner {
	mock := &IGrabScanner{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
