// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	serror "repo-scanner/internal/utils/serror"

	mock "github.com/stretchr/testify/mock"
)

// ITrx is an autogenerated mock type for the ITrx type
type ITrx struct {
	mock.Mock
}

// Abort provides a mock function with given fields:
func (_m *ITrx) Abort() serror.SError {
	ret := _m.Called()

	var r0 serror.SError
	if rf, ok := ret.Get(0).(func() serror.SError); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(serror.SError)
		}
	}

	return r0
}

// Admit provides a mock function with given fields:
func (_m *ITrx) Admit() serror.SError {
	ret := _m.Called()

	var r0 serror.SError
	if rf, ok := ret.Get(0).(func() serror.SError); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(serror.SError)
		}
	}

	return r0
}

type mockConstructorTestingTNewITrx interface {
	mock.TestingT
	Cleanup(func())
}

// NewITrx creates a new instance of ITrx. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewITrx(t mockConstructorTestingTNewITrx) *ITrx {
	mock := &ITrx{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
