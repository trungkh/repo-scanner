// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	model "repo-scanner/internal/model"

	mock "github.com/stretchr/testify/mock"

	serror "repo-scanner/internal/utils/serror"
)

// ITrxRepository is an autogenerated mock type for the ITrxRepository type
type ITrxRepository struct {
	mock.Mock
}

// Create provides a mock function with given fields:
func (_m *ITrxRepository) Create() (*model.Trx, serror.SError) {
	ret := _m.Called()

	var r0 *model.Trx
	if rf, ok := ret.Get(0).(func() *model.Trx); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Trx)
		}
	}

	var r1 serror.SError
	if rf, ok := ret.Get(1).(func() serror.SError); ok {
		r1 = rf()
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(serror.SError)
		}
	}

	return r0, r1
}

type mockConstructorTestingTNewITrxRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewITrxRepository creates a new instance of ITrxRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewITrxRepository(t mockConstructorTestingTNewITrxRepository) *ITrxRepository {
	mock := &ITrxRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
